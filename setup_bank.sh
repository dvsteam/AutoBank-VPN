#!/bin/bash

# =============================================
# AutoBank T·ª± ƒê·ªông Setup Script cho VPN
# Ph√°t tri·ªÉn b·ªüi DVSTEAM - Admin S·ªπ
# T·ª± ƒë·ªông t·∫£i v·ªÅ v√† c√†i ƒë·∫∑t AutoBank t·ª´ DVSTEAM
# =============================================
set -e  

# Enable debug mode if needed
# set -x

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
PURPLE='\033[0;35m'
WHITE='\033[1;37m'
NC='\033[0m'

GITHUB_URL="http://thueidgiare.com/thanhtoan2/thanhtoan.zip"
ZIP_FILE="thanhtoan.zip"
EXTRACT_DIR="thanhtoan"

# Trap ƒë·ªÉ x·ª≠ l√Ω khi script b·ªã ng·∫Øt
trap 'echo -e "\n${RED}‚ùå Script ƒë√£ b·ªã ng·∫Øt!${NC}"; exit 1' INT TERM

log() {
    echo -e "${GREEN}üîπ  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå  [L·ªñI] $1${NC}"
    exit 1
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

success() {
    echo -e "${GREEN}‚úÖ  $1${NC}"
}

info() {
    echo -e "${CYAN}‚ÑπÔ∏è  $1${NC}"
}

check_requirements() {
    info "ƒêang ki·ªÉm tra c√°c c√¥ng c·ª• c·∫ßn thi·∫øt..."
    sleep 1
    
    if ! command -v wget &> /dev/null && ! command -v curl &> /dev/null; then
        error "C·∫ßn c√†i ƒë·∫∑t wget ho·∫∑c curl ƒë·ªÉ t·∫£i file"
    fi
    
    if ! command -v unzip &> /dev/null; then
        error "C·∫ßn c√†i ƒë·∫∑t unzip ƒë·ªÉ gi·∫£i n√©n file"
    fi
    
    success "T·∫•t c·∫£ c√¥ng c·ª• ƒë√£ s·∫µn s√†ng!"
    sleep 1
}

download_and_extract() {
    log "ƒêang t·∫£i v·ªÅ AutoBank t·ª´ m√°y ch·ªß DVSTEAM..."
    sleep 1
    
    [ -f "$ZIP_FILE" ] && rm -f "$ZIP_FILE"
    [ -d "$EXTRACT_DIR" ] && rm -rf "$EXTRACT_DIR"
    
    if command -v wget &> /dev/null; then
        wget -q -O "$ZIP_FILE" "$GITHUB_URL" || error "Kh√¥ng th·ªÉ t·∫£i file t·ª´ m√°y ch·ªß"
    elif command -v curl &> /dev/null; then
        curl -s -L -o "$ZIP_FILE" "$GITHUB_URL" || error "Kh√¥ng th·ªÉ t·∫£i file t·ª´ m√°y ch·ªß"
    fi
    
    info "ƒêang gi·∫£i n√©n AutoBank..."
    sleep 1
    unzip -q "$ZIP_FILE" -d "$EXTRACT_DIR" || error "Kh√¥ng th·ªÉ gi·∫£i n√©n file"
    
    rm -f "$ZIP_FILE"
    
    info "ƒêang thi·∫øt l·∫≠p quy·ªÅn truy c·∫≠p..."
    sleep 1
    chown -R www:www "$EXTRACT_DIR" &>/dev/null || true
    find "$EXTRACT_DIR" -type f -exec chmod 644 {} \; &>/dev/null
    find "$EXTRACT_DIR" -type d -exec chmod 755 {} \; &>/dev/null
    
    success "T·∫£i v·ªÅ v√† gi·∫£i n√©n ho√†n t·∫•t!"
    sleep 1
}

get_domain() {
    echo
    echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${WHITE}            üåê  C·∫§U H√åNH T√äN MI·ªÄN WEB            ${NC}"
    echo -e "${PURPLE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo
    
    while true; do
        echo -e "${CYAN}Vui l√≤ng nh·∫≠p t√™n mi·ªÅn website c·ªßa b·∫°n:${NC}"
        echo -e "${YELLOW}V√≠ d·ª•: dvsteam.net, dvsteam.vn${NC}"
        echo -n "üëâ  T√™n mi·ªÅn: "
        read -r DOMAIN_WEB
        
        # Ki·ªÉm tra n·∫øu ng∆∞·ªùi d√πng nh·∫•n Ctrl+C ho·∫∑c EOF
        if [ $? -ne 0 ]; then
            error "ƒê√£ h·ªßy qu√° tr√¨nh nh·∫≠p t√™n mi·ªÅn"
        fi
        
        if [ -z "$DOMAIN_WEB" ]; then
            warning "Vui l√≤ng nh·∫≠p t√™n mi·ªÅn!"
            echo
            continue
        fi
        
        # Lo·∫°i b·ªè kho·∫£ng tr·∫Øng ƒë·∫ßu v√† cu·ªëi
        DOMAIN_WEB=$(echo "$DOMAIN_WEB" | xargs)
        
        if [[ $DOMAIN_WEB =~ ^[a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?(\.[a-zA-Z0-9]([a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])?)*$ ]]; then
            success "T√™n mi·ªÅn h·ª£p l·ªá: $DOMAIN_WEB"
            echo
            break
        else
            warning "T√™n mi·ªÅn kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p l·∫°i."
            echo -e "${CYAN}T√™n mi·ªÅn ph·∫£i c√≥ ƒë·ªãnh d·∫°ng: domain.com, subdomain.domain.com${NC}"
            echo
        fi
    done
}

setup_paths() {
    info "ƒêang ki·ªÉm tra ƒë∆∞·ªùng d·∫´n th∆∞ m·ª•c..."
    sleep 1
    
    CURRENT_DIR=$(pwd)
    
    if [[ "$CURRENT_DIR" != */public ]]; then
        warning "Script ƒë∆∞·ª£c khuy·∫øn ngh·ªã ch·∫°y t·ª´ th∆∞ m·ª•c /public"
        echo -e "${CYAN}B·∫°n c√≥ mu·ªën ti·∫øp t·ª•c v·ªõi th∆∞ m·ª•c hi·ªán t·∫°i kh√¥ng?${NC}"
        echo -n "üëâ Ti·∫øp t·ª•c? (y/N): "
        read -r continue_anyway
        if [[ ! $continue_anyway =~ ^[Yy]$ ]]; then
            error "Vui l√≤ng ch·∫°y script t·ª´ th∆∞ m·ª•c /public"
        fi
    fi
    
    SOURCE_PAYMENTS="$CURRENT_DIR/$EXTRACT_DIR/app/Payments"
    TARGET_PAYMENTS="$CURRENT_DIR/../app/Payments"
    TARGET_APP_DIR="$CURRENT_DIR/../app"
    
    if [ ! -d "$TARGET_APP_DIR" ]; then
        warning "Th∆∞ m·ª•c ../app kh√¥ng t·ªìn t·∫°i"
        echo -e "${CYAN}B·∫°n c√≥ mu·ªën t·∫°o th∆∞ m·ª•c n√†y kh√¥ng?${NC}"
        echo -n "üëâ T·∫°o th∆∞ m·ª•c? (Y/n): "
        read -r create_app
        if [[ ! $create_app =~ ^[Nn]$ ]]; then
            mkdir -p "$TARGET_APP_DIR" || error "Kh√¥ng th·ªÉ t·∫°o th∆∞ m·ª•c $TARGET_APP_DIR"
            success "ƒê√£ t·∫°o th∆∞ m·ª•c: $TARGET_APP_DIR"
            sleep 1
        else
            error "C·∫ßn th∆∞ m·ª•c app ƒë·ªÉ ti·∫øp t·ª•c"
        fi
    fi
    
    success "ƒê∆∞·ªùng d·∫´n ƒë√£ ƒë∆∞·ª£c thi·∫øt l·∫≠p!"
    sleep 1
}

move_payments_directory() {
    info "ƒêang ki·ªÉm tra th∆∞ m·ª•c Payments..."
    sleep 1
    
    if [ ! -d "$SOURCE_PAYMENTS" ]; then
        error "Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c Payments trong: $SOURCE_PAYMENTS"
    fi
    
    if [ ! -d "$TARGET_PAYMENTS" ]; then
        mkdir -p "$TARGET_PAYMENTS" || error "Kh√¥ng th·ªÉ t·∫°o th∆∞ m·ª•c $TARGET_PAYMENTS"
    fi
    
    SOURCE_FILES=$(find "$SOURCE_PAYMENTS" -maxdepth 1 -type f | wc -l)
    if [ $SOURCE_FILES -eq 0 ]; then
        warning "Kh√¥ng c√≥ file n√†o trong th∆∞ m·ª•c Payments source"
        return 0
    fi
    
    log "ƒêang di chuy·ªÉn $SOURCE_FILES file thanh to√°n..."
    sleep 1
    
    MOVED_COUNT=0
    FAILED_COUNT=0
    
    for file in "$SOURCE_PAYMENTS"/*; do
        if [ -f "$file" ]; then
            if mv "$file" "$TARGET_PAYMENTS/" &>/dev/null; then
                MOVED_COUNT=$((MOVED_COUNT + 1))
            else
                FAILED_COUNT=$((FAILED_COUNT + 1))
            fi
        fi
    done
    
    info "ƒêang thi·∫øt l·∫≠p quy·ªÅn truy c·∫≠p cho file thanh to√°n..."
    sleep 1
    chown -R www:www "$TARGET_PAYMENTS" &>/dev/null || true
    find "$TARGET_PAYMENTS" -type f -exec chmod 644 {} \; &>/dev/null
    find "$TARGET_PAYMENTS" -type d -exec chmod 755 {} \; &>/dev/null

    sleep 1
    SOURCE_APP_DIR="$CURRENT_DIR/$EXTRACT_DIR/app"
    if [ -d "$SOURCE_APP_DIR" ]; then
        rm -rf "$SOURCE_APP_DIR" &>/dev/null || true
    fi
    
    if [ $FAILED_COUNT -eq 0 ]; then
        success "Di chuy·ªÉn $MOVED_COUNT file thanh to√°n ho√†n t·∫•t!"
    else
        warning "Di chuy·ªÉn ho√†n t·∫•t v·ªõi $FAILED_COUNT l·ªói (th√†nh c√¥ng: $MOVED_COUNT)"
    fi
    sleep 1
}

create_config() {
    info "ƒêang t·∫°o file c·∫•u h√¨nh config.php..."
    sleep 1
    
    if [ -d "$EXTRACT_DIR" ]; then
        CONFIG_DIR="$EXTRACT_DIR"
        
        if [ $(find "$EXTRACT_DIR" -mindepth 1 -maxdepth 1 -type d | wc -l) -eq 1 ]; then
            CONFIG_DIR=$(find "$EXTRACT_DIR" -mindepth 1 -maxdepth 1 -type d | head -1)
        fi
        
        cat > "$CONFIG_DIR/config.php" << EOF
<?php
const CONFIG = [
    'DOMAIN_WEB' => "$DOMAIN_WEB", //T√™n mi·ªÅn web c·ªßa b·∫°n

    // RETURN_URL n·∫øu b·∫°n d√πng landing th√¨ m·ªõi c·∫ßn ƒëi·ªÅn, c√≤n kh√¥ng th√¨ th√¥i k·ªá n√≥, n·∫øu ƒëi·ªÅn h√£y ƒëi·ªÅn "index.php"
    'RETURN_URL' => "",
    
    // H√£y allow ip SERVER_MOMOSV3 tr√™n cloudflare n·∫øu b·∫°n d√πng AutoMoMo_DVS
    // Allow ip SERVER_MOMOSV3 tr√™n cloudflare n·∫øu b·∫°n d√πng AutoMoMo_DVS
    'SERVER_MOMOSV3' => "103.118.28.183",

    // H√£y allow ip SERVER_GACHTHEDVS tr√™n cloudflare n·∫øu b·∫°n d√πng AutoCard_DVS
    'SERVER_GACHTHEDVS' => [
        '103.82.23.210'
    ]

];
EOF
        
        success "File config.php ƒë√£ ƒë∆∞·ª£c t·∫°o v·ªõi domain: $DOMAIN_WEB"
        sleep 1
        return 0
    else
        error "Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c ƒë√£ gi·∫£i n√©n"
    fi
}

set_permissions() {
    info "ƒêang thi·∫øt l·∫≠p quy·ªÅn truy c·∫≠p cu·ªëi c√πng..."
    sleep 1
    
    CONFIG_DIR="$EXTRACT_DIR"
    if [ $(find "$EXTRACT_DIR" -mindepth 1 -maxdepth 1 -type d | wc -l) -eq 1 ]; then
        CONFIG_DIR=$(find "$EXTRACT_DIR" -mindepth 1 -maxdepth 1 -type d | head -1)
    fi
    
    find "$CONFIG_DIR" -type d -exec chmod 755 {} \; &>/dev/null
    find "$CONFIG_DIR" -type f -exec chmod 644 {} \; &>/dev/null
    
    for dir in "logs" "uploads" "cache" "tmp"; do
        if [ -d "$CONFIG_DIR/$dir" ]; then
            chmod -R 777 "$CONFIG_DIR/$dir" &>/dev/null
        fi
    done
    
    success "Quy·ªÅn truy c·∫≠p ƒë√£ ƒë∆∞·ª£c thi·∫øt l·∫≠p!"
    sleep 1
}

show_completion_info() {
    echo
    echo -e "${GREEN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${WHITE}            üéâ  C√ÄI ƒê·∫∂T HO√ÄN T·∫§T!                ${NC}"
    echo -e "${GREEN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo
    
    FINAL_DIR="$EXTRACT_DIR"
    if [ $(find "$EXTRACT_DIR" -mindepth 1 -maxdepth 1 -type d | wc -l) -eq 1 ]; then
        FINAL_DIR=$(find "$EXTRACT_DIR" -mindepth 1 -maxdepth 1 -type d | head -1)
    fi
        
    echo -e "${PURPLE}üìù  C√ÅC B∆Ø·ªöC TI·∫æP THEO:${NC}"
    echo -e "${WHITE}   1.${NC} Truy c·∫≠p trang ${CYAN}Admin${NC} => ${CYAN}C·∫•u h√¨nh thanh to√°n${NC}"
    echo -e "${WHITE}   2.${NC} Th√™m c·∫•u h√¨nh thanh to√°n => Ch·ªçn ${CYAN}T·ªáp Giao Di·ªán${NC} t∆∞∆°ng ·ª©ng"
    echo -e "${WHITE}   3.${NC} ƒêi·ªÅn t√™n ${CYAN}\"Th∆∞ M·ª•c Thanh To√°n\"${NC} trong Admin l√†: ${YELLOW}$EXTRACT_DIR${NC}"
    echo -e "${WHITE}   4.${NC} H√£y ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin theo y√™u c·∫ßu trong Admin.${NC}"
    echo
    
    echo -e "${CYAN}üìã  TH√îNG TIN D·ª∞ √ÅN:${NC}"
    echo -e "${WHITE}   ‚Ä¢ T√™n mi·ªÅn:${NC} ${GREEN}$DOMAIN_WEB${NC}"
    echo -e "${WHITE}   ‚Ä¢ Th∆∞ m·ª•c d·ª± √°n:${NC} ${YELLOW}$(pwd)/$FINAL_DIR${NC}"
    echo -e "${WHITE}   ‚Ä¢ File c·∫•u h√¨nh:${NC} ${YELLOW}config.php${NC}"
    echo -e "${WHITE}   ‚Ä¢ Phi√™n b·∫£n:${NC} ${YELLOW}AutoBank + AutoCard v2.0${NC}"
    echo

    echo -e "${BLUE}üí°  H·ªñ TR·ª¢ K·ª∏ THU·∫¨T:${NC}"
    echo -e "${WHITE}   ‚Ä¢ Zalo:${NC} ${CYAN}08353.15551 (S·ªπ)${NC}"
    echo -e "${WHITE}   ‚Ä¢ Telegram:${NC} ${CYAN}@DuongVanSy${NC}"
    echo
    
    success "AutoBank by DVSTEAM ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t th√†nh c√¥ng! üöÄ"
}

main() {
    echo -e "${BLUE}"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    echo "             ‚ö° AUTOBANK SETUP SCRIPT ‚ö°"
    echo "               by DVSTEAM - Admin S·ªπ"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    echo -e "${NC}"
    echo -e "${CYAN}üîß  T·ª± ƒë·ªông t·∫£i v·ªÅ v√† c√†i ƒë·∫∑t AutoBank t·ª´ m√°y ch·ªß DVSTEAM${NC}"
    echo -e "${YELLOW}üìÖ  Phi√™n b·∫£n: AutoBank + Auto Card v2.0${NC}"
    echo
    sleep 2
    
    check_requirements
    download_and_extract
    get_domain
    create_config
    setup_paths
    move_payments_directory
    set_permissions
    show_completion_info
}

main "$@"
